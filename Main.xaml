<Activity mc:Ignorable="sap sap2010 sads" x:Class="Main"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ss="clr-namespace:System.Security;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="OrchestratorQueueName" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Main2_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Windows</x:String>
      <x:String>System.Security</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>Microsoft.Office.Interop.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <StateMachine sap2010:Annotation.AnnotationText="VMware Robotics Enterprise Design Template&#xA;Version: 1.0" DisplayName="General Business Process" sap2010:WorkflowViewState.IdRef="StateMachine_1">
    <StateMachine.InitialState>
      <State x:Name="__ReferenceID0" sap2010:Annotation.AnnotationText="Read Config, Init Applications" DisplayName="Init" sap2010:WorkflowViewState.IdRef="State_2">
        <State.Entry>
          <TryCatch DisplayName="Catch intialization exceptions" sap2010:WorkflowViewState.IdRef="TryCatch_2">
            <TryCatch.Try>
              <Sequence DisplayName="Init State" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <Assign DisplayName="Initialize SystemError" sap2010:WorkflowViewState.IdRef="Assign_5">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                  </Assign.Value>
                </Assign>
                <If Condition="[Config is Nothing]" DisplayName="If first run - read Config file" sap2010:WorkflowViewState.IdRef="If_1">
                  <If.Then>
                    <Sequence DisplayName="First Run" sap2010:WorkflowViewState.IdRef="Sequence_17">
                      <Assign sap2010:Annotation.AnnotationText="Should be moved to a folder within the My Documents folder" sap2010:WorkflowViewState.IdRef="Assign_25">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[configFilePath]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">["Data\Config.xlsx"]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitAllSettings workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Framework\InitAllSettings.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">[configFilePath]</InArgument>
                          <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"Settings", "Constants"}]</InArgument>
                          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[Config]</OutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <Sequence sap2010:Annotation.AnnotationText="Retrieves all variables needed to send faulted email notifications to the BAS team" DisplayName="Get and store SMTP Asset values" sap2010:WorkflowViewState.IdRef="Sequence_25">
                        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_29" Level="Info" Message="Retrieving SMTP Asset Values" />
                        <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="SMTP_Credentials" DisplayName="Get SMTP Credentials" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1" Password="[smtpPassword]" Username="[smtpUserName]" />
                        <Assign DisplayName="Convert SecureString to String" sap2010:WorkflowViewState.IdRef="Assign_21">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[smtpStrPassword]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[new System.Net.NetworkCredential(string.Empty, smtpPassword).Password]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="SMTP_Host" DisplayName="Get SMTP Host" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
                          <ui:GetRobotAsset.Value>
                            <OutArgument x:TypeArguments="x:String">[smtpHost]</OutArgument>
                          </ui:GetRobotAsset.Value>
                        </ui:GetRobotAsset>
                        <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="SMTP_Port" DisplayName="Get SMTP Port" sap2010:WorkflowViewState.IdRef="GetRobotAsset_2">
                          <ui:GetRobotAsset.Value>
                            <OutArgument x:TypeArguments="x:Int32">[smtpPort]</OutArgument>
                          </ui:GetRobotAsset.Value>
                        </ui:GetRobotAsset>
                        <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="Support_email2case" DisplayName="Get BAS Email to Case DL" sap2010:WorkflowViewState.IdRef="GetRobotAsset_3">
                          <ui:GetRobotAsset.Value>
                            <OutArgument x:TypeArguments="x:String">[supportBasEmailToCase]</OutArgument>
                          </ui:GetRobotAsset.Value>
                        </ui:GetRobotAsset>
                        <ui:CommentOut DisplayName="Comment Out" sap2010:WorkflowViewState.IdRef="CommentOut_15">
                          <ui:CommentOut.Body>
                            <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_49">
                              <Assign sap2010:Annotation.AnnotationText="Remove at Deployment Time. You can modify this to reflect your personal email ID while designing. While active, failure alerts will not be sent to the BAS team" sap2010:WorkflowViewState.IdRef="Assign_27">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[supportBasEmailToCase]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[environment.UserName + "@vmware.com"]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </ui:CommentOut.Body>
                        </ui:CommentOut>
                        <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="SupportTeam_DL" DisplayName="Get BAS DL" sap2010:WorkflowViewState.IdRef="GetRobotAsset_4">
                          <ui:GetRobotAsset.Value>
                            <OutArgument x:TypeArguments="x:String">[supportBasDL]</OutArgument>
                          </ui:GetRobotAsset.Value>
                        </ui:GetRobotAsset>
                        <ui:CommentOut DisplayName="Comment Out" sap2010:WorkflowViewState.IdRef="CommentOut_16">
                          <ui:CommentOut.Body>
                            <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_50">
                              <Assign sap2010:Annotation.AnnotationText="Remove at Deployment Time. You can modify this to reflect your personal email ID while designing. While active, failure alerts will not be sent to the BAS team" sap2010:WorkflowViewState.IdRef="Assign_28">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[supportBasDL]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[environment.UserName + "@vmware.com"]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </ui:CommentOut.Body>
                        </ui:CommentOut>
                        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_30" Level="Info" Message="Finalized retrieving SMTP Asset Values" />
                      </Sequence>
                      <ui:CommentOut DisplayName="Comment Out" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                        <ui:CommentOut.Body>
                          <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_37">
                            <Sequence sap2010:Annotation.AnnotationText="Checks that screen resolution is 1920x1080. If not, displays an exception" DisplayName="Check Screen Resolution" sap2010:WorkflowViewState.IdRef="Sequence_22">
                              <Assign sap2010:WorkflowViewState.IdRef="Assign_20">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[screenResolution]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[system.Windows.SystemParameters.PrimaryScreenWidth.ToString + "x" + system.Windows.SystemParameters .PrimaryScreenHeight.ToString]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <If Condition="[screenResolution.Equals(&quot;1920x1080&quot;)]" sap2010:WorkflowViewState.IdRef="If_10">
                                <If.Then>
                                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_26" Level="Info" Message="[&quot;Screen Resolution: &quot; + screenResolution]" />
                                </If.Then>
                                <If.Else>
                                  <Throw Exception="[new exception(&quot;Screen resolution different than 1920x1080. Actual resoltuion: &quot; + screenResolution)]" sap2010:WorkflowViewState.IdRef="Throw_1" />
                                </If.Else>
                              </If>
                            </Sequence>
                          </Sequence>
                        </ui:CommentOut.Body>
                      </ui:CommentOut>
                      <ui:CommentOut DisplayName="Comment Out" sap2010:WorkflowViewState.IdRef="CommentOut_8">
                        <ui:CommentOut.Body>
                          <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_42">
                            <Sequence sap2010:Annotation.AnnotationText="Optional Sequence&#xA;Retrieves all variables needed for IMAP activitiy" DisplayName="Get and store IMAP Asset values" sap2010:WorkflowViewState.IdRef="Sequence_34">
                              <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_36" Level="Info" Message="Retrieving IMAP Asset Values" />
                              <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="imap_Port" DisplayName="Get IMAP Port" sap2010:WorkflowViewState.IdRef="GetRobotAsset_5">
                                <ui:GetRobotAsset.Value>
                                  <OutArgument x:TypeArguments="x:Int32">[imapPort]</OutArgument>
                                </ui:GetRobotAsset.Value>
                              </ui:GetRobotAsset>
                              <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="imap_Server" DisplayName="Get IMAP Server" sap2010:WorkflowViewState.IdRef="GetRobotAsset_6">
                                <ui:GetRobotAsset.Value>
                                  <OutArgument x:TypeArguments="x:String">[imapServer]</OutArgument>
                                </ui:GetRobotAsset.Value>
                              </ui:GetRobotAsset>
                              <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_37" Level="Info" Message="Retrieved IMAP related assets" />
                            </Sequence>
                          </Sequence>
                        </ui:CommentOut.Body>
                      </ui:CommentOut>
                      <ui:CommentOut DisplayName="Comment Out" sap2010:WorkflowViewState.IdRef="CommentOut_5">
                        <ui:CommentOut.Body>
                          <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_39">
                            <Sequence sap2010:Annotation.AnnotationText="Optional Sequence&#xA;Retrieves Bot's password from the assets" DisplayName="Get Bot's Credentials" sap2010:WorkflowViewState.IdRef="Sequence_32">
                              <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_32" Level="Info" Message="Retrieving Bot's credentials from assets" />
                              <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="BOT_Credentials" DisplayName="Get Bot's Credential" sap2010:WorkflowViewState.IdRef="GetRobotCredential_2" Password="[botPassword]" Username="[botServiceID]" />
                              <Assign DisplayName="Convert SecureString to String" sap2010:WorkflowViewState.IdRef="Assign_26">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[botStrPassword]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[new System.Net.NetworkCredential(string.Empty, botPassword).Password]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_33" Level="Info" Message="Retrieved Bot's credentials from assets" />
                            </Sequence>
                          </Sequence>
                        </ui:CommentOut.Body>
                      </ui:CommentOut>
                      <Sequence sap2010:Annotation.AnnotationText="Optional Sequence&#xA;Retrieves any process specific asset needed" DisplayName="Get Process specific assets" sap2010:WorkflowViewState.IdRef="Sequence_33">
                        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_34" Level="Info" Message="Retrieving process specific assets" />
                        <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="Upload_FVAT_EmailId" DisplayName="Get Asset for user email" sap2010:WorkflowViewState.IdRef="GetRobotAsset_7">
                          <ui:GetRobotAsset.Value>
                            <OutArgument x:TypeArguments="ui:GenericValue">[var_useremail]</OutArgument>
                          </ui:GetRobotAsset.Value>
                        </ui:GetRobotAsset>
                        <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="Upload_FVAT_GroupEmail" DisplayName="Get Asset for group email" sap2010:WorkflowViewState.IdRef="GetRobotAsset_8">
                          <ui:GetRobotAsset.Value>
                            <OutArgument x:TypeArguments="ui:GenericValue">[var_groupemail]</OutArgument>
                          </ui:GetRobotAsset.Value>
                        </ui:GetRobotAsset>
                        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_35" Level="Info" Message="Retrieved process specific asset" />
                      </Sequence>
                    </Sequence>
                  </If.Then>
                </If>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitiAllApplications workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Framework\InitAllApplications.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_23">
                    <Assign DisplayName="Assign excepton to SystemError" sap2010:WorkflowViewState.IdRef="Assign_14">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" TimeoutMS="{x:Null}" Body="[Config(&quot;BusinessProcessName&quot;).ToString + &quot; job failed due to the below reason:&quot; + environment.NewLine + environment.NewLine + exception.ToString]" DisplayName="Send SMTP Mail Message" Email="[smtpUserName]" EnableSSL="True" sap2010:WorkflowViewState.IdRef="SendMail_1" IsBodyHtml="False" Password="[smtpStrPassword]" Port="[smtpPort]" SecureConnection="Auto" Server="[smtpHost]" Subject="[Config(&quot;BusinessProcessName&quot;).ToString + &quot; || Job Faulted&quot;]" To="[supportBasDL + &quot;;&quot; + supportBasEmailToCase]">
                      <ui:SendMail.Files>
                        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                      </ui:SendMail.Files>
                    </ui:SendMail>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <scg:Dictionary x:TypeArguments="x:String, Argument" />
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Rethrow sap2010:WorkflowViewState.IdRef="Rethrow_1" />
                  </Sequence>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </State.Entry>
        <State.Transitions>
          <Transition DisplayName="Success" sap2010:WorkflowViewState.IdRef="Transition_2">
            <Transition.To>
              <State x:Name="__ReferenceID1" sap2010:Annotation.AnnotationText="Get next transaction input data" DisplayName="Get Transaction Data" sap2010:WorkflowViewState.IdRef="State_4">
                <State.Entry>
                  <Sequence sap2010:Annotation.AnnotationText="Data retrieval mechanism. The TransactionNumber variable holds the current transaction number. Incrementing this number means getting the next transaction. For a robot retry, the number is not increased, in case of application exception, until the max retry number.&#xA;TransactionItem type needs to be changed accordingly." DisplayName="Retrieve Data" sap2010:WorkflowViewState.IdRef="Sequence_1">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Boolean" Name="ShouldStop" />
                    </Sequence.Variables>
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_24">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">[usingOrchestratorQueues]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[usingOrchestratorQueues = true]" DisplayName="If - Check if the solution uses Orchestrator Queues" sap2010:WorkflowViewState.IdRef="If_11">
                      <If.Then>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_27">
                          <Sequence DisplayName="Orchestrator Queues Sequence" sap2010:WorkflowViewState.IdRef="Sequence_26">
                            <ui:ShouldStop DisplayName="Check Stop Signal" sap2010:WorkflowViewState.IdRef="ShouldStop_1" Result="[ShouldStop]" />
                            <If Condition="[ShouldStop]" DisplayName="Should Stop or Get Next" sap2010:WorkflowViewState.IdRef="If_8">
                              <If.Then>
                                <Sequence DisplayName="Orchestrator stop requested" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                  <ui:LogMessage DisplayName="Log Stop message" sap2010:WorkflowViewState.IdRef="LogMessage_25" Level="Info" Message="Stop process requested" />
                                  <Assign DisplayName="End Process" sap2010:WorkflowViewState.IdRef="Assign_15">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="ui:QueueItem">[TransactionItem]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="ui:QueueItem">[Nothing]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <TryCatch DisplayName="Try GetTransactionData" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                                  <TryCatch.Try>
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetTransactionData workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="Framework\GetTransactionData.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:Int32" x:Key="in_TransactionNumber">[TransactionNumber]</InArgument>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                        <OutArgument x:TypeArguments="ui:QueueItem" x:Key="out_TransactionItem">[TransactionItem]</OutArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionField1">[TransactionField1]</OutArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionField2">[TransactionField2]</OutArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionID">[TransactionID]</OutArgument>
                                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_TransactionData">[TransactionData]</InOutArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </TryCatch.Try>
                                  <TryCatch.Catches>
                                    <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                                      <ActivityAction x:TypeArguments="s:Exception">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Log exception message and End process" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                          <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Fatal" Message="[Config(&quot;LogMessage_GetTransactionDataError&quot;).ToString+TransactionNumber.ToString+&quot;. &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                          <Assign DisplayName="End Process" sap2010:WorkflowViewState.IdRef="Assign_16">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="ui:QueueItem">[TransactionItem]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="ui:QueueItem">[Nothing]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ActivityAction>
                                    </Catch>
                                  </TryCatch.Catches>
                                </TryCatch>
                              </If.Else>
                            </If>
                          </Sequence>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_28" Level="Info" Message="No data retrieval, non-queue process" />
                      </If.Else>
                    </If>
                  </Sequence>
                </State.Entry>
                <State.Transitions>
                  <Transition DisplayName="New Transaction" sap2010:WorkflowViewState.IdRef="Transition_6">
                    <Transition.To>
                      <State x:Name="__ReferenceID3" sap2010:Annotation.AnnotationText="A transaction either succeeds or fails with a Business Rule Exception or a System Error. For System Error, it can be retried." DisplayName="Process Transaction" sap2010:WorkflowViewState.IdRef="State_3">
                        <State.Entry>
                          <TryCatch DisplayName="Process Transaction" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                            <TryCatch.Try>
                              <Sequence DisplayName="Process the current TransactionItem" sap2010:WorkflowViewState.IdRef="Sequence_2">
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_29">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="s:DateTime">[transactionStartTime]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="s:DateTime">[System.DateTime.Now]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessRuleException]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="ui:BusinessRuleException">[Nothing]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_30">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[TransactionStatus]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_31">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[IsSuccessful]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_32">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[ExceptionMessage]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ProcessTransaction workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Process.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                    <OutArgument x:TypeArguments="s:DateTime" x:Key="out_TransactionStartTime">[transactionStartTime]</OutArgument>
                                    <OutArgument x:TypeArguments="s:DateTime" x:Key="out_TransactionEndTime">[transactionEndTime]</OutArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_arg_year" />
                                    <InArgument x:TypeArguments="x:String" x:Key="in_arg_startDate" />
                                    <InArgument x:TypeArguments="x:String" x:Key="in_arg_endDate" />
                                    <InArgument x:TypeArguments="x:String" x:Key="in_arg_FiscalYear" />
                                    <InArgument x:TypeArguments="x:Int32" x:Key="in_arg_smtpport">[smtpPort]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_arg_smtphost">[smtpHost]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_arg_username">[smtpUserName]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_arg_password">[smtpStrPassword]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_arg_supportBAS">[supportBasEmailToCase]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_arg_BAS">[supportBasDL]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_arg_useremail">[var_useremail]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_arg_groupemail">[var_groupemail]</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_40">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[TransactionStatus]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">Successful</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_41">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[IsSuccessful]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_24">
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_33">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[TransactionStatus]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">BusinessRuleException</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_34">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Boolean">[IsSuccessful]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_35">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[ExceptionMessage]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[exception.Message]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Set transaction status to Rule Exception" sap2010:WorkflowViewState.IdRef="Assign_3">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessRuleException]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="ui:BusinessRuleException">[exception]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <If Condition="[usingOrchestratorQueues = false]" DisplayName="Send email to BAS and rethrow exception for single transaction processes" sap2010:WorkflowViewState.IdRef="If_12">
                                      <If.Then>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_29">
                                          <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" TimeoutMS="{x:Null}" Body="[Config(&quot;BusinessProcessName&quot;).ToString + &quot; job failed due to the below reason:&quot; + environment.NewLine + environment.NewLine + exception.ToString]" DisplayName="Send SMTP Mail Message" Email="[smtpUserName]" EnableSSL="True" sap2010:WorkflowViewState.IdRef="SendMail_2" IsBodyHtml="False" Password="[smtpStrPassword]" Port="[smtpPort]" SecureConnection="Auto" Server="[smtpHost]" Subject="[Config(&quot;BusinessProcessName&quot;).ToString + &quot; || Job Faulted&quot;]" To="[supportBasDL + &quot;;&quot; + supportBasEmailToCase]">
                                            <ui:SendMail.Files>
                                              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                            </ui:SendMail.Files>
                                          </ui:SendMail>
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Send Logs to ELK - Business Rule Exception" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" UnSafe="False" WorkflowFileName="Framework\SendLogsToELK.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="TransactionID">[TransactionID]</InArgument>
                                              <InArgument x:TypeArguments="s:DateTime" x:Key="TransactionStartTime">[transactionStartTime]</InArgument>
                                              <InArgument x:TypeArguments="s:DateTime" x:Key="TransactionEndTime">[transactionEndTime]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="CustCol1" />
                                              <InArgument x:TypeArguments="x:String" x:Key="CustCol2" />
                                              <InArgument x:TypeArguments="x:String" x:Key="CustCol3" />
                                              <InArgument x:TypeArguments="x:String" x:Key="CustCol4" />
                                              <InArgument x:TypeArguments="x:String" x:Key="CustCol5" />
                                              <InArgument x:TypeArguments="x:String" x:Key="CustCol6" />
                                              <InArgument x:TypeArguments="x:String" x:Key="CustCol7" />
                                              <InArgument x:TypeArguments="x:String" x:Key="CustCol8" />
                                              <InArgument x:TypeArguments="x:String" x:Key="CustCol9" />
                                              <InArgument x:TypeArguments="x:String" x:Key="CustCol10" />
                                              <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus">BusinessException</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="LogFieldMessage">[Config("LogMessage_BusinessRuleException").ToString + BusinessRuleException.Message]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="TransactionNumber">[TransactionNumber.ToString]</InArgument>
                                              <InArgument x:TypeArguments="x:Boolean" x:Key="IsSuccessful">False</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                          <Rethrow sap2010:WorkflowViewState.IdRef="Rethrow_2" />
                                        </Sequence>
                                      </If.Then>
                                    </If>
                                  </Sequence>
                                </ActivityAction>
                              </Catch>
                              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_59">
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_36">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[TransactionStatus]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">SystemException</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_37">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Boolean">[IsSuccessful]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_38">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[ExceptionMessage]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[exception.Message]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Set transaction status to SystemError" sap2010:WorkflowViewState.IdRef="Assign_4">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                            <TryCatch.Finally>
                              <TryCatch DisplayName="Set the Transaction Status and go to next Transaction" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                                <TryCatch.Try>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_60">
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_39">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="s:DateTime">[transactionEndTime]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="s:DateTime">[System.DateTime.Now]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SendLogsToELK workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_23" UnSafe="False" WorkflowFileName="Framework\SendLogsToELK.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="TransactionID">[Config("BusinessProcessName").ToString+System.DateTime.Now.ToString]</InArgument>
                                        <InArgument x:TypeArguments="s:DateTime" x:Key="TransactionStartTime">[transactionStartTime]</InArgument>
                                        <InArgument x:TypeArguments="s:DateTime" x:Key="TransactionEndTime">[transactionEndTime]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="CustCol1">[TransactionStatus]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="CustCol2">[ExceptionMessage]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="CustCol3" />
                                        <InArgument x:TypeArguments="x:String" x:Key="CustCol4" />
                                        <InArgument x:TypeArguments="x:String" x:Key="CustCol5" />
                                        <InArgument x:TypeArguments="x:String" x:Key="CustCol6" />
                                        <InArgument x:TypeArguments="x:String" x:Key="CustCol7" />
                                        <InArgument x:TypeArguments="x:String" x:Key="CustCol8" />
                                        <InArgument x:TypeArguments="x:String" x:Key="CustCol9" />
                                        <InArgument x:TypeArguments="x:String" x:Key="CustCol10" />
                                        <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus">[TransactionStatus]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="LogFieldMessage" />
                                        <InArgument x:TypeArguments="x:String" x:Key="TransactionNumber" />
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="IsSuccessful">[IsSuccessful]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SetTransactionStatus workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="Framework\SetTransactionStatus.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                        <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemError">[SystemError]</InArgument>
                                        <InArgument x:TypeArguments="ui:BusinessRuleException" x:Key="in_BusinessRuleException">[BusinessRuleException]</InArgument>
                                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="io_RetryNumber">[RetryNumber]</InOutArgument>
                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="io_TransactionNumber">[TransactionNumber]</InOutArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_TransactionField1">[TransactionField1]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_TransactionField2">[TransactionField2]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_TransactionID">[TransactionID]</InArgument>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_UsingOrchestratorQueues">[usingOrchestratorQueues]</InArgument>
                                        <InArgument x:TypeArguments="s:DateTime" x:Key="in_TransactionStartTime">[transactionStartTime]</InArgument>
                                        <InArgument x:TypeArguments="s:DateTime" x:Key="in_TransactionEndTime">[transactionEndTime]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </Sequence>
                                </TryCatch.Try>
                                <TryCatch.Catches>
                                  <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_7">
                                    <ActivityAction x:TypeArguments="s:Exception">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                      </ActivityAction.Argument>
                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_28">
                                        <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" TimeoutMS="{x:Null}" Body="[Config(&quot;BusinessProcessName&quot;).ToString + &quot; job failed due to the below reason:&quot; + environment.NewLine + environment.NewLine + exception.ToString]" DisplayName="Send SMTP Mail Message" Email="[smtpUserName]" EnableSSL="True" sap2010:WorkflowViewState.IdRef="SendMail_4" IsBodyHtml="False" Password="[smtpStrPassword]" Port="[smtpPort]" SecureConnection="Auto" Server="[smtpHost]" Subject="[Config(&quot;BusinessProcessName&quot;).ToString + &quot; || Job Faulted&quot;]" To="[supportBasDL + &quot;;&quot; + supportBasEmailToCase]">
                                          <ui:SendMail.Files>
                                            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                          </ui:SendMail.Files>
                                        </ui:SendMail>
                                        <Rethrow sap2010:WorkflowViewState.IdRef="Rethrow_4" />
                                      </Sequence>
                                    </ActivityAction>
                                  </Catch>
                                  <Catch x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="Catch`1_8">
                                    <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                                      </ActivityAction.Argument>
                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_31">
                                        <If Condition="[usingOrchestratorQueues = false]" DisplayName="Send email to BAS and rethrow exception for single transaction processes" sap2010:WorkflowViewState.IdRef="If_13">
                                          <If.Then>
                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_30">
                                              <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" TimeoutMS="{x:Null}" Body="[Config(&quot;BusinessProcessName&quot;).ToString + &quot; job failed due to the below reason:&quot; + environment.NewLine + environment.NewLine + exception.ToString]" DisplayName="Send SMTP Mail Message" Email="[smtpUserName]" EnableSSL="True" sap2010:WorkflowViewState.IdRef="SendMail_3" IsBodyHtml="False" Password="[smtpStrPassword]" Port="[smtpPort]" SecureConnection="Auto" Server="[smtpHost]" Subject="[Config(&quot;BusinessProcessName&quot;).ToString + &quot; || Job Faulted&quot;]" To="[supportBasDL + &quot;;&quot; + supportBasEmailToCase]">
                                                <ui:SendMail.Files>
                                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                                </ui:SendMail.Files>
                                              </ui:SendMail>
                                              <Rethrow sap2010:WorkflowViewState.IdRef="Rethrow_5" />
                                            </Sequence>
                                          </If.Then>
                                        </If>
                                      </Sequence>
                                    </ActivityAction>
                                  </Catch>
                                </TryCatch.Catches>
                              </TryCatch>
                            </TryCatch.Finally>
                          </TryCatch>
                        </State.Entry>
                        <State.Transitions>
                          <Transition DisplayName="Error" sap2010:WorkflowViewState.IdRef="Transition_4" To="{x:Reference __ReferenceID0}" Condition="[SystemError IsNot Nothing]" />
                          <Transition DisplayName="Rule Exception" sap2010:WorkflowViewState.IdRef="Transition_1" To="{x:Reference __ReferenceID1}" Condition="[BusinessRuleException IsNot Nothing]" />
                          <Transition sap2010:Annotation.AnnotationText="No need for any action here, in case of success simply go to next transaction" DisplayName="Success" sap2010:WorkflowViewState.IdRef="Transition_5" To="{x:Reference __ReferenceID1}" Condition="[SystemError Is Nothing And BusinessRuleException is Nothing and usingOrchestratorQueues = true]" />
                          <Transition DisplayName="Success Non-queue" sap2010:WorkflowViewState.IdRef="Transition_8">
                            <Transition.To>
                              <State x:Name="__ReferenceID2" sap2010:Annotation.AnnotationText="Process stops here" DisplayName="End Process" sap2010:WorkflowViewState.IdRef="State_1" IsFinal="True">
                                <State.Entry>
                                  <TryCatch sap2010:WorkflowViewState.IdRef="TryCatch_4">
                                    <TryCatch.Try>
                                      <Sequence DisplayName="End of process activities" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CloseAllApplications workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Framework\CloseAllApplications.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                      </Sequence>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                                        <ActivityAction x:TypeArguments="s:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                          </ActivityAction.Argument>
                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_12">
                                            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Warn" Message="[&quot;Applications failed to close normally. &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                          </Sequence>
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                  </TryCatch>
                                </State.Entry>
                              </State>
                            </Transition.To>
                            <Transition.Action>
                              <ui:LogMessage sap2010:WorkflowViewState.IdRef="LogMessage_31" Level="Info" Message="Single Transaction Process" />
                            </Transition.Action>
                            <Transition.Condition>[SystemError Is Nothing And BusinessRuleException is Nothing and usingOrchestratorQueues = false]</Transition.Condition>
                          </Transition>
                        </State.Transitions>
                      </State>
                    </Transition.To>
                    <Transition.Action>
                      <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_22" Level="Info" Message="[Config(&quot;LogMessage_GetTransactionData&quot;).ToString+TransactionNumber.ToString]" />
                    </Transition.Action>
                    <Transition.Condition>[TransactionItem IsNot Nothing or usingOrchestratorQueues = false]</Transition.Condition>
                  </Transition>
                  <Transition sap2010:Annotation.AnnotationText="This is a simple mecanism to stop the process.&#xA;In reallife scenario you can stop the process when there is no more data to process or on a schedule." DisplayName="No Data" sap2010:WorkflowViewState.IdRef="Transition_7" To="{x:Reference __ReferenceID2}">
                    <Transition.Action>
                      <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_23" Level="Info" Message="Process finished due to no more transaction data" />
                    </Transition.Action>
                    <Transition.Condition>[TransactionItem Is Nothing]</Transition.Condition>
                  </Transition>
                </State.Transitions>
              </State>
            </Transition.To>
            <Transition.Action>
              <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_1" Text="Default transition is picked up if there are no errors during initialization" />
            </Transition.Action>
            <Transition.Condition>[SystemError is Nothing]</Transition.Condition>
          </Transition>
          <Transition DisplayName="System Error" sap2010:WorkflowViewState.IdRef="Transition_3" To="{x:Reference __ReferenceID2}">
            <Transition.Action>
              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Fatal" Message="[&quot;System error at initialization: &quot; + SystemError.Message + &quot; at Source: &quot; + SystemError.Source]" />
            </Transition.Action>
            <Transition.Condition>[SystemError isNot Nothing]</Transition.Condition>
          </Transition>
        </State.Transitions>
      </State>
    </StateMachine.InitialState>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
    <StateMachine.Variables>
      <Variable x:TypeArguments="ui:QueueItem" Name="TransactionItem" />
      <Variable x:TypeArguments="s:Exception" Name="SystemError" />
      <Variable x:TypeArguments="ui:BusinessRuleException" Name="BusinessRuleException" />
      <Variable x:TypeArguments="x:Int32" Default="1" Name="TransactionNumber" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Config" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="RetryNumber" />
      <Variable x:TypeArguments="x:String" Name="TransactionField2" />
      <Variable x:TypeArguments="x:String" Name="TransactionField1" />
      <Variable x:TypeArguments="x:String" Name="TransactionID" />
      <Variable x:TypeArguments="sd:DataTable" Name="TransactionData" />
      <Variable x:TypeArguments="x:String" Name="screenResolution" />
      <Variable x:TypeArguments="x:String" Name="smtpUserName" />
      <Variable x:TypeArguments="ss:SecureString" Name="smtpPassword" />
      <Variable x:TypeArguments="x:String" Name="smtpHost" />
      <Variable x:TypeArguments="x:Int32" Name="smtpPort" />
      <Variable x:TypeArguments="x:String" Name="smtpStrPassword" />
      <Variable x:TypeArguments="x:String" Name="supportBasEmailToCase" />
      <Variable x:TypeArguments="x:String" Name="supportBasDL" />
      <Variable x:TypeArguments="x:Boolean" Name="usingOrchestratorQueues" />
      <Variable x:TypeArguments="x:String" Name="configFilePath" />
      <Variable x:TypeArguments="s:DateTime" Name="transactionStartTime" />
      <Variable x:TypeArguments="s:DateTime" Name="transactionEndTime" />
      <Variable x:TypeArguments="x:String" Name="botServiceID" />
      <Variable x:TypeArguments="x:String" Name="botStrPassword" />
      <Variable x:TypeArguments="ss:SecureString" Name="botPassword" />
      <Variable x:TypeArguments="x:Int32" Name="imapPort" />
      <Variable x:TypeArguments="x:String" Name="imapServer" />
      <Variable x:TypeArguments="ui:GenericValue" Name="var_useremail" />
      <Variable x:TypeArguments="ui:GenericValue" Name="var_groupemail" />
      <Variable x:TypeArguments="x:String" Name="TransactionStatus" />
      <Variable x:TypeArguments="x:Boolean" Name="IsSuccessful" />
      <Variable x:TypeArguments="x:String" Name="ExceptionMessage" />
    </StateMachine.Variables>
    <sads:DebugSymbol.Symbol>d21DOlxVc2Vyc1xtbWljaGVsZVxEZXNrdG9wXFVwbG9hZF9Gb3JlZ2luX1ZBVF9JbnZvaWNlc190b19JVF9TaGFyZVBvaW50MVxWTXdhcmUgUmVGcmFtZVdvcmsgVGVtcGxhdGVcTWFpbi54YW1smgJWA6IGEgIBAYMGM4MGNgMBnwOFBjOFBjYDAZ4DswIP6wUXAwHeAoYDF90FHwMBgAG2BR/VBScCAXNYB/kFDwIBArUCE4EDHgMB6QLiBSviBW0DAecC4AUX4AXhAQMB4wLoBSvoBUcDAeIC5gUX5gW6AQMB4AKIAxuuBSYDAYoBsQWWAbEFswEDAYcBsgWfAbIFxgEDAYYBswWKArMF7AIDAYUB2gUz2gWUAQMBhAHYBR/YBZIBAwGCAbgFI9MFLgIBdVoLrgIWAgEO8AUj8AU7AgEL7gUP7gWdAQIBCvYFI/YFPgIBCPQFD/QF9gECAQS5AhXAAh4DAZoDwQIVgAMaAwHqAuAFhQHgBd4BAwHkAuYFhQHmBbcBAwHhAooDH9cDKgMBqQLUBB+sBSoDAdMB3wMjpgQuAwGeAa4EI88ELgMBiwHYBXPYBY8BAwGDAboFJ8AFMgIBfcgFK88FNgIBdlwPjgIaAgEnlgITqgIeAgEP9AV99AXzAQIBBb4CQb4CRgMBnQO7AkK7AlsDAZsDwQIjwQJFAwHrAsMCGfsCJAMB7wL+Ahn+ArABAwHtAosDIZIDKgMB2gKTAyGaAyoDAdYCmwMhogMqAwHSAqMDIaoDKgMBzgKrAyGyAyoDAcoCswMhxgM5AwGyAscDIc4DKgMBrgLPAyHWAyoDAaoC1gQjhAUuAwH6AYwFJ5MFMgMB6QGbBSeoBTIDAdQB4AMl5wMuAwHPAegDJe8DLgMBywHwAyX3Ay4DAccB+AMl/wMuAwHCAYAEJaUEKgMBnwGvBCW2BC4DAZoBtwQlvgQuAwGWAb8EJcYELgMBkQHHBCXOBC4DAYwBuwUpvwVBAgF+yQUtyQWRAgIBecoFLc4FRQIBd10RZBoCAW9lEYMCFgIBLoQCEYgCKQIBLIkCEY0CKQIBKJcCFZ4CHgIBIp8CFaMCIwIBE6QCFagCLQIBEakCFakCTAIBEMQCG/oCJgMB8AL+AocB/gKtAQMB7gKQA06QA2MDAd0CjQNPjQNlAwHbApgDXJgDZQMB2QKVA12VA3QDAdcCoANMoANaAwHVAp0DTZ0DYAMB0wKoA02oA1IDAdECpQNOpQNcAwHPArADTLADWgMBzQKtA02tA18DAcsCxANmxAN2AwHJAr8DZL8DcgMBxwLAA2TAA3UDAcUCtwNwtwOGAQMBwwK9A2O9A20DAcECwQNmwQN9AwG/Ar4DZL4DbgMBvQK4A264A4IBAwG7ArYDeLYDgAEDAbkCtQNrtQN8AwG3AsIDX8IDbQMBtQKzA9sBswPpAQMBtALDA2XDA3QDAbMCzANMzANWAwGxAskDTckDYAMBrwLUA03UA1EDAa0C0QNO0QNcAwGrAtcEJd4ELgMBpQLfBCXzBD0DAZUC9AQlgwU9AwH7AY0FKZEFNwMB6wGSBSmSBWADAeoBnAUppwUuAwHVAeUDUOUDZQMB0gHiA1HiA2QDAdAB7QNR7QNWAwHOAeoDUuoDYAMBzAH1A1D1A2MDAcoB8gNR8gNjAwHIAf0DYP0DawMBxQH6A2H6A3gDAcMBgAQzgARWAwGgAYIEKaMENAMBogG0BFC0BF8DAZ0BsQRRsQRkAwGbAbwEUbwEVgMBmQG5BFK5BGADAZcBxARQxARjAwGUAcEEUcEEYwMBkgHMBFPMBF4DAY8ByQRUyQRhAwGNAbsF5QG7BYoCAgF/yQWbAckFjgICAXrKBeUBygWGAgIBeGI/YkgCAXJfQF9NAgFwZR9lNAIBL2cVgQIgAgExhALKAYQC6wECAS2LAmiLAnACASqJAs0BiQLxAQIBKZwCQ5wCTgIBJZkCRJkCUQIBI58C/wSfArcFAgEfnwKQAZ8CuAICAR6fAqkEnwL7BAIBHJ8C5AKfAvQCAgEanwLoA58C9AMCARifApQEnwKgBAIBFp8CzwOfAuIDAgEUpALCAaQC4wECARLFAh3FApMBAwGXA8YCHfkCIgMB8QLcBFLcBGcDAagC2QRT2QRnAwGmAuUEYeUEcwMBowLkBGHkBHQDAaEC7gRq7gR9AwGfAuIEb+IEhQEDAZ0C4QRm4QSrAQMBmwLjBG3jBIEBAwGZAt8E2wHfBPkBAwGYAvEEZvEEdAMBlgKBBXCBBYQBAwGTAvcEavcEdwMBkQL4BIEB+ASYAQMBjwL9BG39BIABAwGNAvwEbfwEgAEDAYsC+gRp+gR2AwGJAvYEfPYEhAEDAYcC+QRv+QSAAQMBhQL7BG/7BIIBAwGDAoAFcoAFiAEDAYEC/gRp/gR4AwH/AfQE4gH0BIcCAwH+Af8EdP8EjQEDAfwBjQWTBY0FywUDAfcBjQWkAY0FzAIDAfYBjQW9BI0FjwUDAfQBjQX4Ao0FiAMDAfIBjQX8A40FiAQDAfABjQWoBI0FtAQDAe4BjQXjA40F9gMDAewBnAU3nAVaAwHWAZ4FLaUFOAMB2AGDBCuHBDkDAbMBiAQrjARDAwGxAY0EK6EEQwMBpAGiBCuiBGIDAaMBaBdvIAIBa3AXdi8CAWR3F7MBIgIBQrQBF8sBJwIBQcwBF98BJwIBQOABF/IBJwIBP/MBF4ACIgIBMsUCggHFApABAwGYA8YCK8YCOQMB8gLIAiHSAiwDAZAD1QIh9wIsAwH0Ap8FL6MFPQMB2gGkBS+kBWYDAdkBgwSVBYMEzQUDAb8BgwSmAYMEzgIDAb4BgwS/BIMEkQUDAbwBgwT6AoMEigMDAboBgwT+A4MEigQDAbgBgwSqBIMEtgQDAbYBgwTlA4ME+AMDAbQBiATYAYgE+QEDAbIBnARwnASBAQMBsAGQBHWQBIsBAwGuAY8EbI8EewMBrAGRBHORBIcBAwGqAY0E7gGNBIwCAwGpAZ8EbJ8EcQMBqAGeBHCeBIwBAwGmAZ0Ebp0EwwEDAaUBbUJtVgIBbmpDalMCAWx0cHR4AgFpcM8BcO8BAgFoc1xzdwIBZ3JYcmgCAWV4GXioAQIBYnkZefIBAgFcehmBASICAVeCARmGASwCAVOHARmLASwCAU+MARmQASwCAUuRARmeASkCAUqfARmjASwCAUakARmxASkCAUWyARmyAbIBAgFD9AEZ9AGuAQIBPfUBGfkBLAIBOfoBGf4BLAIBNf8BGf8BrAECATPJAiPJArEBAwGVA8oCI9ECLAMBkQPXAiXhAj0DAYAD6QIp8wI0AwH1Ap8FmQWfBdEFAwHmAZ8FqgGfBdICAwHlAZ8FwwSfBZUFAwHjAZ8F/gKfBY4DAwHhAZ8FggSfBY4EAwHfAZ8FrgSfBboEAwHdAZ8F6QOfBfwDAwHbAXiHAXilAQIBY3lPeWECAWF53wF57wECAV95xQF51QECAV1/RH+LAQIBWnxFfFYCAViEAUWEAU8CAVWCAUqCAVUCAVSJAUSJAU4CAVGHAUqHAVUCAVCOAUWOAVwCAU2MAUqMAV4CAUyhAUWhAVMCAUifAUqfAVoCAUeyAYcBsgGvAQIBRPQBhwH0AasBAgE+9wFM9wFbAgE79QFK9QFfAgE6/AFM/AFcAgE3+gFK+gFiAgE2/wGHAf8BqQECATTJApYByQKuAQMBlgPPAlLPAlsDAZQDzAJTzAJkAwGSA90Cb90CggEDAY4D3AJv3AKCAQMBjAPeAmveAnoDAYoD2wJx2wKCAQMBiAPZAmzZAn8DAYYD2gJ82gKEAQMBhAPfAnLfAoMBAwGCA9cC4AHXAoMCAwGBA+oCK+oCxgIDAfoC6wIr8gI0AwH2AuoCmgHqAsMCAwH7AvACWvACYwMB+QLtAlvtAmwDAfcC</sads:DebugSymbol.Symbol>
  </StateMachine>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="484,60" />
      <sap2010:ViewStateData Id="Assign_25" sap:VirtualizedContainerService.HintSize="336.8,104">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_12" sap:VirtualizedContainerService.HintSize="336.8,88" />
      <sap2010:ViewStateData Id="LogMessage_29" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="GetRobotCredential_1" sap:VirtualizedContainerService.HintSize="314.4,22.4" />
      <sap2010:ViewStateData Id="Assign_21" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="GetRobotAsset_1" sap:VirtualizedContainerService.HintSize="314.4,22.4" />
      <sap2010:ViewStateData Id="GetRobotAsset_2" sap:VirtualizedContainerService.HintSize="314.4,22.4" />
      <sap2010:ViewStateData Id="GetRobotAsset_3" sap:VirtualizedContainerService.HintSize="314.4,22.4" />
      <sap2010:ViewStateData Id="Assign_27" sap:VirtualizedContainerService.HintSize="243.2,152">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_49" sap:VirtualizedContainerService.HintSize="265.6,276.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_15" sap:VirtualizedContainerService.HintSize="314.4,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetRobotAsset_4" sap:VirtualizedContainerService.HintSize="314.4,22.4" />
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="243.2,152">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_50" sap:VirtualizedContainerService.HintSize="265.6,276.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_16" sap:VirtualizedContainerService.HintSize="314.4,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_30" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="Sequence_25" sap:VirtualizedContainerService.HintSize="336.8,992">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_20" sap:VirtualizedContainerService.HintSize="540,62" />
      <sap2010:ViewStateData Id="LogMessage_26" sap:VirtualizedContainerService.HintSize="314,94.6666666666667" />
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_10" sap:VirtualizedContainerService.HintSize="540,248.666666666667" />
      <sap2010:ViewStateData Id="Sequence_22" sap:VirtualizedContainerService.HintSize="200,112.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_37" sap:VirtualizedContainerService.HintSize="584.8,237.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_3" sap:VirtualizedContainerService.HintSize="336.8,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_36" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="GetRobotAsset_5" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="GetRobotAsset_6" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="LogMessage_37" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_34" sap:VirtualizedContainerService.HintSize="200,112.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_42" sap:VirtualizedContainerService.HintSize="358.4,237.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_8" sap:VirtualizedContainerService.HintSize="336.8,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_32" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="GetRobotCredential_2" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Assign_26" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_33" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_32" sap:VirtualizedContainerService.HintSize="200,112.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_39" sap:VirtualizedContainerService.HintSize="358.4,237.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_5" sap:VirtualizedContainerService.HintSize="336.8,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_34" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="GetRobotAsset_7" sap:VirtualizedContainerService.HintSize="314.4,22.4" />
      <sap2010:ViewStateData Id="GetRobotAsset_8" sap:VirtualizedContainerService.HintSize="314.4,22.4" />
      <sap2010:ViewStateData Id="LogMessage_35" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="Sequence_33" sap:VirtualizedContainerService.HintSize="336.8,519.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="359.2,2226.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="484,2376">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_18" sap:VirtualizedContainerService.HintSize="484,88" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_5" sap:VirtualizedContainerService.HintSize="484,88" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="506.4,2856.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="SendMail_1" sap:VirtualizedContainerService.HintSize="314.4,146.4" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_19" sap:VirtualizedContainerService.HintSize="314.4,88" />
      <sap2010:ViewStateData Id="Rethrow_1" sap:VirtualizedContainerService.HintSize="314.4,22.4" />
      <sap2010:ViewStateData Id="Sequence_23" sap:VirtualizedContainerService.HintSize="336.8,561.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_3" sap:VirtualizedContainerService.HintSize="400,632">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_2" sap:VirtualizedContainerService.HintSize="414.4,796.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_24" sap:VirtualizedContainerService.HintSize="1164.66666666667,62" />
      <sap2010:ViewStateData Id="ShouldStop_1" sap:VirtualizedContainerService.HintSize="780.666666666667,22" />
      <sap2010:ViewStateData Id="LogMessage_25" sap:VirtualizedContainerService.HintSize="314,94.6666666666667" />
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="314,62" />
      <sap2010:ViewStateData Id="Sequence_21" sap:VirtualizedContainerService.HintSize="336,320.666666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_13" sap:VirtualizedContainerService.HintSize="314,86.6666666666667" />
      <sap2010:ViewStateData Id="LogMessage_12" sap:VirtualizedContainerService.HintSize="314,94.6666666666667" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="314,62" />
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="336,320.666666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_6" sap:VirtualizedContainerService.HintSize="404.666666666667,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_5" sap:VirtualizedContainerService.HintSize="418.666666666667,324.666666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="780.666666666667,478.666666666667" />
      <sap2010:ViewStateData Id="Sequence_26" sap:VirtualizedContainerService.HintSize="802.666666666667,664.666666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_27" sap:VirtualizedContainerService.HintSize="824.666666666667,788.666666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_28" sap:VirtualizedContainerService.HintSize="314,93.3333333333333" />
      <sap2010:ViewStateData Id="If_11" sap:VirtualizedContainerService.HintSize="1164.66666666667,942.666666666667" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="1186.66666666667,1230.66666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_29" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="Assign_30" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="Assign_31" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="Assign_32" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_9" sap:VirtualizedContainerService.HintSize="314.4,88" />
      <sap2010:ViewStateData Id="Assign_40" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="Assign_41" sap:VirtualizedContainerService.HintSize="314.4,62.4" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="336,916">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_33" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_34" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_35" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="SendMail_2" sap:VirtualizedContainerService.HintSize="314.4,146.4" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_20" sap:VirtualizedContainerService.HintSize="314.4,88" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_22" sap:VirtualizedContainerService.HintSize="314.4,88" />
      <sap2010:ViewStateData Id="Rethrow_2" sap:VirtualizedContainerService.HintSize="314.4,22.4" />
      <sap2010:ViewStateData Id="Sequence_29" sap:VirtualizedContainerService.HintSize="336.8,589.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_12" sap:VirtualizedContainerService.HintSize="464,739.2" />
      <sap2010:ViewStateData Id="Sequence_24" sap:VirtualizedContainerService.HintSize="486.4,1264">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="510.4,22.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_36" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Assign_37" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Assign_38" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Sequence_59" sap:VirtualizedContainerService.HintSize="265.6,484.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_2" sap:VirtualizedContainerService.HintSize="510.4,22.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_39" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_23" sap:VirtualizedContainerService.HintSize="314.4,88" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_15" sap:VirtualizedContainerService.HintSize="314.4,88" />
      <sap2010:ViewStateData Id="Sequence_60" sap:VirtualizedContainerService.HintSize="336.8,440.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SendMail_4" sap:VirtualizedContainerService.HintSize="314.4,146.4" />
      <sap2010:ViewStateData Id="Rethrow_4" sap:VirtualizedContainerService.HintSize="314.4,22.4" />
      <sap2010:ViewStateData Id="Sequence_28" sap:VirtualizedContainerService.HintSize="336.8,333.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_7" sap:VirtualizedContainerService.HintSize="492.8,22.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SendMail_3" sap:VirtualizedContainerService.HintSize="314.4,146.4" />
      <sap2010:ViewStateData Id="Rethrow_5" sap:VirtualizedContainerService.HintSize="314.4,22.4" />
      <sap2010:ViewStateData Id="Sequence_30" sap:VirtualizedContainerService.HintSize="336.8,333.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_13" sap:VirtualizedContainerService.HintSize="464,483.2" />
      <sap2010:ViewStateData Id="Sequence_31" sap:VirtualizedContainerService.HintSize="486.4,608">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_8" sap:VirtualizedContainerService.HintSize="492.8,678.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_6" sap:VirtualizedContainerService.HintSize="507.2,866.4" />
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="524.8,1120.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_4" sap:VirtualizedContainerService.HintSize="429.6,509.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">348.36,526.4 348.36,537.78 538.9,537.78 538.9,57.78 508.9,57.78</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">23</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">40</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_1" sap:VirtualizedContainerService.HintSize="429.6,509.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">401.16,526.4 401.16,541.02 535.7,541.02 535.7,211.02 505.7,211.02</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">43</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">20</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_5" sap:VirtualizedContainerService.HintSize="605,532">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">443.4,526.4 443.4,550.38 535.7,550.38 535.7,250.38 505.7,250.38</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">59</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">52</x:Int32>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_6" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_20" sap:VirtualizedContainerService.HintSize="336,211">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_11" sap:VirtualizedContainerService.HintSize="314,93" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_7" sap:VirtualizedContainerService.HintSize="314.4,88" />
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="336,345">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_5" sap:VirtualizedContainerService.HintSize="404,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_4" sap:VirtualizedContainerService.HintSize="418,443" />
      <sap2010:ViewStateData Id="State_1" sap:VirtualizedContainerService.HintSize="124.8,106.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">73,188.5</av:Point>
            <av:Size x:Key="ShapeSize">124.8,106.4</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">110</x:Double>
            <x:Double x:Key="StateContainerHeight">26</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_31" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Transition_8" sap:VirtualizedContainerService.HintSize="608,505">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">369.48,526.4 369.48,556.4 116.68,556.4 116.68,294.9</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">31</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">27</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_3" sap:VirtualizedContainerService.HintSize="550.4,1609.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">285,380</av:Point>
            <av:Size x:Key="ShapeSize">211.2,146.4</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">197</x:Double>
            <x:Double x:Key="StateContainerHeight">34</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_22" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Transition_6" sap:VirtualizedContainerService.HintSize="437,796">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">390.166666666667,280.166666666667 390.166666666667,310.166666666667 390.333333333333,310.166666666667 390.333333333333,380</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_23" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Transition_7" sap:VirtualizedContainerService.HintSize="430,853">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">390.1,279.9 390.1,309.9 135.4,309.9 135.4,294.9</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">39</x:Int32>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_4" sap:VirtualizedContainerService.HintSize="231.2,98.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">274.5,181.5</av:Point>
            <av:Size x:Key="ShapeSize">231.2,98.4</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">217</x:Double>
            <x:Double x:Key="StateContainerHeight">34</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_1" sap:VirtualizedContainerService.HintSize="314,74" />
      <sap2010:ViewStateData Id="Transition_2" sap:VirtualizedContainerService.HintSize="430,537">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
            <av:PointCollection x:Key="ConnectorLocation">391.5,98.5 391.5,128.5 390.166666666667,128.5 390.166666666667,181.5</av:PointCollection>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Transition_3" sap:VirtualizedContainerService.HintSize="430,796">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">391.5,98.5 391.5,128.5 128.8,128.5 128.8,188.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">34</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_2" sap:VirtualizedContainerService.HintSize="234.4,89.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">274.5,8.5</av:Point>
            <av:Size x:Key="ShapeSize">234.4,89.6</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">220</x:Double>
            <x:Double x:Key="StateContainerHeight">25</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="StateMachine_1" sap:VirtualizedContainerService.HintSize="786.4,788.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">70,12.5</av:Point>
            <x:Double x:Key="StateContainerWidth">772</x:Double>
            <x:Double x:Key="StateContainerHeight">708</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">130,50 160,50 160,39 274.5,39</av:PointCollection>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Main2_1" sap:VirtualizedContainerService.HintSize="826.4,868.8" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>